// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package mock_get_user_followers is a generated GoMock package.
package mock_get_user_followers

import (
	model "aggregationframework/internal/model/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockfollowerConnector is a mock of followerConnector interface.
type MockfollowerConnector struct {
	ctrl     *gomock.Controller
	recorder *MockfollowerConnectorMockRecorder
}

// MockfollowerConnectorMockRecorder is the mock recorder for MockfollowerConnector.
type MockfollowerConnectorMockRecorder struct {
	mock *MockfollowerConnector
}

// NewMockfollowerConnector creates a new mock instance.
func NewMockfollowerConnector(ctrl *gomock.Controller) *MockfollowerConnector {
	mock := &MockfollowerConnector{ctrl: ctrl}
	mock.recorder = &MockfollowerConnectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockfollowerConnector) EXPECT() *MockfollowerConnectorMockRecorder {
	return m.recorder
}

// GetUserFollowerIds mocks base method.
func (m *MockfollowerConnector) GetUserFollowerIds(username, lastFollowerId string, limit int) ([]string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserFollowerIds", username, lastFollowerId, limit)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetUserFollowerIds indicates an expected call of GetUserFollowerIds.
func (mr *MockfollowerConnectorMockRecorder) GetUserFollowerIds(username, lastFollowerId, limit interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserFollowerIds", reflect.TypeOf((*MockfollowerConnector)(nil).GetUserFollowerIds), username, lastFollowerId, limit)
}

// MockreadmodelsConnector is a mock of readmodelsConnector interface.
type MockreadmodelsConnector struct {
	ctrl     *gomock.Controller
	recorder *MockreadmodelsConnectorMockRecorder
}

// MockreadmodelsConnectorMockRecorder is the mock recorder for MockreadmodelsConnector.
type MockreadmodelsConnectorMockRecorder struct {
	mock *MockreadmodelsConnector
}

// NewMockreadmodelsConnector creates a new mock instance.
func NewMockreadmodelsConnector(ctrl *gomock.Controller) *MockreadmodelsConnector {
	mock := &MockreadmodelsConnector{ctrl: ctrl}
	mock.recorder = &MockreadmodelsConnectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockreadmodelsConnector) EXPECT() *MockreadmodelsConnectorMockRecorder {
	return m.recorder
}

// GetFollowersMetadata mocks base method.
func (m *MockreadmodelsConnector) GetFollowersMetadata(username []string) ([]model.Follower, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFollowersMetadata", username)
	ret0, _ := ret[0].([]model.Follower)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFollowersMetadata indicates an expected call of GetFollowersMetadata.
func (mr *MockreadmodelsConnectorMockRecorder) GetFollowersMetadata(username interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFollowersMetadata", reflect.TypeOf((*MockreadmodelsConnector)(nil).GetFollowersMetadata), username)
}
